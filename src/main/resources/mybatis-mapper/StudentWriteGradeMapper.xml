<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dazky.dao.StudentWriteGradeMapper" >
  <resultMap id="BaseResultMap" type="cn.dazky.pojo.StudentWriteGrade" >
    <id column="write_grade_id" property="writeGradeId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="discipline_id" property="disciplineId" jdbcType="INTEGER" />
    <result column="write_grade" property="writeGrade" jdbcType="VARCHAR" />
    <result column="write_grade_time" property="writeGradeTime" jdbcType="TIMESTAMP" />
    <result column="write_grade_note" property="writeGradeNote" jdbcType="VARCHAR" />
    <result column="write_grade_xuenian" property="writeGradeXuenian" jdbcType="VARCHAR" />
    <result column="write_grade_xueqi" property="writeGradeXueqi" jdbcType="VARCHAR" />
    <result column="write_grade_type" property="writeGradeType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    write_grade_id, student_id, staff_id, class_id, discipline_id, write_grade, write_grade_time, 
    write_grade_note, write_grade_xuenian, write_grade_xueqi, write_grade_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.dazky.pojo.StudentWriteGradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_write_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_write_grade
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_write_grade
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dazky.pojo.StudentWriteGradeExample" >
    delete from student_write_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dazky.pojo.StudentWriteGrade" >
    insert into student_write_grade (write_grade_id, student_id, staff_id, 
      class_id, discipline_id, write_grade, 
      write_grade_time, write_grade_note, write_grade_xuenian, 
      write_grade_xueqi, write_grade_type)
    values (#{writeGradeId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{disciplineId,jdbcType=INTEGER}, #{writeGrade,jdbcType=VARCHAR}, 
      #{writeGradeTime,jdbcType=TIMESTAMP}, #{writeGradeNote,jdbcType=VARCHAR}, #{writeGradeXuenian,jdbcType=VARCHAR}, 
      #{writeGradeXueqi,jdbcType=VARCHAR}, #{writeGradeType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.dazky.pojo.StudentWriteGrade" >
    insert into student_write_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="writeGradeId != null" >
        write_grade_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="disciplineId != null" >
        discipline_id,
      </if>
      <if test="writeGrade != null" >
        write_grade,
      </if>
      <if test="writeGradeTime != null" >
        write_grade_time,
      </if>
      <if test="writeGradeNote != null" >
        write_grade_note,
      </if>
      <if test="writeGradeXuenian != null" >
        write_grade_xuenian,
      </if>
      <if test="writeGradeXueqi != null" >
        write_grade_xueqi,
      </if>
      <if test="writeGradeType != null" >
        write_grade_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="writeGradeId != null" >
        #{writeGradeId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null" >
        #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="writeGrade != null" >
        #{writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeTime != null" >
        #{writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeGradeNote != null" >
        #{writeGradeNote,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeXuenian != null" >
        #{writeGradeXuenian,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeXueqi != null" >
        #{writeGradeXueqi,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeType != null" >
        #{writeGradeType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dazky.pojo.StudentWriteGradeExample" resultType="java.lang.Integer" >
    select count(*) from student_write_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_write_grade
    <set >
      <if test="record.writeGradeId != null" >
        write_grade_id = #{record.writeGradeId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.disciplineId != null" >
        discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      </if>
      <if test="record.writeGrade != null" >
        write_grade = #{record.writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGradeTime != null" >
        write_grade_time = #{record.writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.writeGradeNote != null" >
        write_grade_note = #{record.writeGradeNote,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGradeXuenian != null" >
        write_grade_xuenian = #{record.writeGradeXuenian,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGradeXueqi != null" >
        write_grade_xueqi = #{record.writeGradeXueqi,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGradeType != null" >
        write_grade_type = #{record.writeGradeType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_write_grade
    set write_grade_id = #{record.writeGradeId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      write_grade = #{record.writeGrade,jdbcType=VARCHAR},
      write_grade_time = #{record.writeGradeTime,jdbcType=TIMESTAMP},
      write_grade_note = #{record.writeGradeNote,jdbcType=VARCHAR},
      write_grade_xuenian = #{record.writeGradeXuenian,jdbcType=VARCHAR},
      write_grade_xueqi = #{record.writeGradeXueqi,jdbcType=VARCHAR},
      write_grade_type = #{record.writeGradeType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dazky.pojo.StudentWriteGrade" >
    update student_write_grade
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null" >
        discipline_id = #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="writeGrade != null" >
        write_grade = #{writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeTime != null" >
        write_grade_time = #{writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeGradeNote != null" >
        write_grade_note = #{writeGradeNote,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeXuenian != null" >
        write_grade_xuenian = #{writeGradeXuenian,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeXueqi != null" >
        write_grade_xueqi = #{writeGradeXueqi,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeType != null" >
        write_grade_type = #{writeGradeType,jdbcType=VARCHAR},
      </if>
    </set>
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dazky.pojo.StudentWriteGrade" >
    update student_write_grade
    set student_id = #{studentId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      discipline_id = #{disciplineId,jdbcType=INTEGER},
      write_grade = #{writeGrade,jdbcType=VARCHAR},
      write_grade_time = #{writeGradeTime,jdbcType=TIMESTAMP},
      write_grade_note = #{writeGradeNote,jdbcType=VARCHAR},
      write_grade_xuenian = #{writeGradeXuenian,jdbcType=VARCHAR},
      write_grade_xueqi = #{writeGradeXueqi,jdbcType=VARCHAR},
      write_grade_type = #{writeGradeType,jdbcType=VARCHAR}
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </update>
</mapper>